// Generated by CoffeeScript 1.4.0
(function() {
  var app;

  $(document).ready(function() {
    app.init();
    $(".demo svg path").each(function() {
      $(this).css("stroke-dasharray", $(this)[0].getTotalLength());
      return $(this).css("stroke-dashoffset", $(this)[0].getTotalLength());
    });
    return $("form").ajaxForm(function(e) {
      if (e === "error") {
        return alert("Sir... Please select your SVG first.");
      } else {
        $(".result").html(e);
        console.log(e);
        $(".result svg path, .result svg text, .result svg polygon, .result svg rect").each(function() {
          $(this).css("stroke-dasharray", $(this)[0].getTotalLength() + "px");
          $(this).css("stroke-dashoffset", $(this)[0].getTotalLength() + "px");
          return app.paths += "&nbsp;&nbsp;&#" + $(this).attr("id") + " {<br />&nbsp;&nbsp;&nbsp;&nbsp;stroke-dasharray: " + $(this)[0].getTotalLength() + "px;<br />&nbsp;&nbsp;&nbsp;&nbsp;stroke-dashoffset: " + $(this)[0].getTotalLength() + "px;<br />&nbsp;&nbsp;}<br />";
        });
        $("form").hide();
        $(".result-box").fadeIn();
        $("html,body").animate({
          scrollTop: $("#result").offset().top
        });
        return app.update_code();
      }
    });
  });

  app = {
    width: "2",
    color: "#1abc9c",
    duration: "5",
    loop: true,
    rounded: "round",
    paths: "",
    keyframes: "<br /><br />@keyframes draw {<br />&nbsp;&nbsp;to {<br />&nbsp;&nbsp;&nbsp;&nbsp;stroke-dashoffset: 0;<br />&nbsp;&nbsp;}<br />}",
    init: function() {
      return this.bind_events();
    },
    bind_events: function() {
      $(document).on("change", ".control-width", function(e) {
        $(".result svg path").css("stroke-width", $(this).val());
        app.width = $(this).val();
        $(".width-info").text(app.width);
        return app.update_code();
      });
      $(document).on("change", ".control-color", function(e) {
        $(".result svg path").css("stroke", $(this).val());
        app.color = $(this).val();
        $(".color-info").text(app.color);
        return app.update_code();
      });
      $(document).on("change", ".control-duration", function(e) {
        $(".result svg path").css("animation-duration", $(this).val() + "s");
        app.duration = $(this).val();
        $(".result").hide().fadeIn(1);
        $(".time-info").text(app.duration + "s");
        return app.update_code();
      });
      $(document).on("change", ".control-loop", function(e) {
        if ($(this).is(":checked")) {
          $(".result svg path").css("animation-iteration-count", "infinite");
          $(".result svg path").css("animation-fill-mode", "none");
          app.loop = true;
        } else {
          $(".result svg path").css("animation-iteration-count", "1");
          $(".result svg path").css("animation-fill-mode", "forwards");
          app.loop = false;
        }
        $(".result").hide().fadeIn(1);
        return app.update_code();
      });
      return $(document).on("change", ".control-rounded", function(e) {
        if ($(this).is(":checked")) {
          $(".result svg path").css("stroke-linecap", "round");
          app.rounded = "round";
        } else {
          $(".result svg path").css("stroke-linecap", "butt");
          app.rounded = "butt";
        }
        $(".result").hide().fadeIn(1);
        return app.update_code();
      });
    },
    update_code: function() {
      var animation;
      animation = "&nbsp;&nbsp;animation-name: draw;<br />&nbsp;&nbsp;animation-duration: " + this.duration + "s;<br />&nbsp;&nbsp;animation-timing-function: linear;";
      if (this.loop) {
        animation += "<br />&nbsp;&nbsp;animation-iteration-count: infinite;<br />&nbsp;&nbsp;animation-fill-mode: none;";
      } else {
        animation += "<br />&nbsp;&nbsp;animation-iteration-count: 1;<br />&nbsp;&nbsp;animation-fill-mode: forwards;";
      }
      return $(".code").html("svg path, svg text, svg rect, svg polygon {<br />&nbsp;&nbsp;fill-opacity: 0;<br />&nbsp;&nbsp;stroke: " + this.color + ";<br />&nbsp;&nbsp;stroke-width: " + this.width + ";<br />&nbsp;&nbsp;stroke-linecap: " + this.rounded + ";<br />" + animation + "<br />" + this.paths + "}" + this.keyframes);
    }
  };

}).call(this);
